#/bin/bash
MANIFEST_FOLDER=$PWD


#. $SKC_BUILD_CONFIG
. $MANIFEST_FOLDER/kw.config


RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

kw_inject_cmd="${KW_ROOT}/bin/kwinject --ignore-files conftest.* -o ${KW_OUTPUT_DIR}/kwinject.out"

kw_inject()
{
        cmd="${kw_inject_cmd} ${@}"
        echo "==> Executing: ${cmd}"
        $cmd

        return "${?}"
}

kw_auth()
{
        cmd="${KW_ROOT}/bin/kwauth --host $KW_HOST --port $KW_PORT --ssl"
        echo "==> Executing: ${cmd}"
        $cmd

        return "${?}"
}

kw_build()
{
        cmd="${KW_ROOT}/bin/kwbuildproject ${kwbuildproject_opt} --host $KW_HOST --port $KW_PORT --ssl --project $KW_PROJECT --tables-directory ${KW_OUTPUT_DIR}/kwtables ${KW_OUTPUT_DIR}/kwinject.out"
        echo "==> Executing: ${cmd}"
        $cmd

        return "${?}"
}

kw_upload()
{
        cmd="${KW_ROOT}/bin/kwadmin  --host $KW_HOST --port $KW_PORT --ssl load --force $KW_PROJECT ${KW_OUTPUT_DIR}/kwtables"
        echo "==> Executing: ${cmd}"
        $cmd

        return "${?}"
}

ConvertPath()
{
        echo "$(dirname $(readlink -e $1))/$(basename $1)"
}

check_config ()
{
        if [ "x$KW_LICENSE_HOST" != "x" ]; then
                lic_opt="--license-host $KW_LICENSE_HOST"
        fi
        if [ "x$KW_LICENSE_PORT" != "x" ]; then
                lic_opt="$lic_opt --license-port $KW_LICENSE_PORT"
        fi

        if [ -z "$KW_PROJECT" ]; then
                echo "KW_PROJECT not set"
                exit 1
        fi

        if [ -z "$KW_OUTPUT_DIR" ]; then
                echo "KW_OUTPUT_DIR not set"
                exit 1
        else
                rm -fr  $KW_OUTPUT_DIR
                mkdir -p $KW_OUTPUT_DIR
        fi

        if [ -z "$KW_ROOT" ]; then
                echo "KW_ROOT not set"
                exit 1
        else
                mkdir -p $KW_ROOT
        fi

        KW_OUTPUT_DIR=`ConvertPath $KW_OUTPUT_DIR`
        KW_ROOT=`ConvertPath $KW_ROOT`

        if [ -x $KW_ROOT/bin/kwinject ]; then
                rm -fr $KW_OUTPUT_DIR/kwtables .kwlp .kwps

        else
                echo "$KW_ROOT/bin/kwinject not valid"
                exit 1
        fi
}



case "$1" in

--help)
        echo ""
        echo "Use one of the following options"
        echo
        echo "$0 : finish klocwork scan build for all existing components"
        echo
        exit
        ;;

*)
    echo "Check configuration"
        check_config
        echo "KW_INJECT along with build invoked for KeyAgent"
        kw_inject ./build_skc_key-protection.sh
        if [ $? -ne 0 ]; then echo; echo -e "${RED}Error, Exit."; exit 1; fi

        echo "KW build"
        kw_build
        if [ $? -ne 0 ]; then echo; echo -e "${RED}Error, Exit."; exit 1; fi

        echo "KW upload"
        kw_upload

        if [ $? -ne 0 ]; then echo; echo -e "${RED}Error, Exit."; exit 1; fi

        ;;

esac

exit 0
