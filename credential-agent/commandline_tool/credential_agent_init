#!/bin/bash
#**********************************************************************************************************************
#**********************************************************************************************************************
#									DHSM_2.0_CREDENTIAL_AGANT_INIT_SCRIPT
#**********************************************************************************************************************
#**********************************************************************************************************************

#======================================================================================================================
#CONSTANT/VARIABLE
#=====================================================================================================================

#FILE_CONSTANT
readonly UTIL_SCRIPT="__PREFIX__/bin/credential-agent/common_utils"
readonly AGENT_CONF_FILE="__PREFIX__/etc/credential_agent.ini"
readonly AGENT_COMMANDLINE_TOOL="__PREFIX__/bin/credential_agent_tool"

#COMMAON_CONSTANT
readonly RENEW_CERT_JOB_INETRVAL="0 * * * *" #IN HOURS FORM


#VARIABLE
declare CRED_SERVICE_IP=""
declare TOKEN=""

##=====================================================================================================================
##COMMON_UTILS
##=====================================================================================================================
if [ -f $UTIL_SCRIPT ]; then
	source $UTIL_SCRIPT
	set_log $FLAG_ENABLE
	log_msg $LOG_DEBUG "Utils included"
else
	echo "$UTIL_SCRIPT inclusion"
	exit -1
fi
#=====================================================================================================================


check_credential_agent_installed()
{
	if [ ! -f $AGENT_COMMANDLINE_TOOL ]; then	
		exit_script $LOG_ERROR "Credential Agent Tool not installed" $CODE_INSTALL_ERROR
	fi
}

issue_cert()
{
	local issue_cert_cmd="$AGENT_COMMANDLINE_TOOL --get-certificate --verbose --force --config $AGENT_CONF_FILE"
	#log_msg $LOG_DEBUG "$issue_cert_cmd"
	$(check_last_cmd_exec_status "$issue_cert_cmd" $EXEC_RULE_WARN "ISSUE_CERT_FROM_CRED_INIT" $CODE_EXEC_ERROR)
}

renew_cert_job()
{
	local renew_cert_cmd="$AGENT_COMMANDLINE_TOOL --renew-certificate --verbose --force --config $AGENT_CONF_FILE"
	local renew_cron_job="$RENEW_CERT_JOB_INETRVAL $renew_cert_cmd"
	crontab -l | grep "renew-certificate" 
	if [[ $? -ne 0 ]]; then
		#log_msg $LOG_DEBUG "$renew_cron_job"
		local renew_cron_job_tmp=$(mktemp)
		crontab -l > $renew_cron_job_tmp
		echo "$renew_cron_job" >> $renew_cron_job_tmp
		crontab $renew_cron_job_tmp
		rm $renew_cron_job_tmp
	else
		log_msg $LOG_WARN "Renew Certificate job already schedule and crontab"
	fi
	crontab -l
}

usage()
{
	log_msg $LOG_WARN "$0 <CRENDIAL_SERVICE_[IP/HOSTNAME]> <CSR_TOKEN>"	
	exit_script $LOG_WARN "Invalid commandline args" $CODE_PARSE_ERROR
}

main()
{
	check_credential_agent_installed
	update_agent_config "$CRED_SERVICE_IP" "$TOKEN" "$AGENT_CONF_FILE"
	issue_cert
	renew_cert_job
}

trap 'send_status' 1 2 3 6

if [ "$1" = "" ] || [ "$2" = "" ]; then
	usage
fi

CRED_SERVICE_IP=$1
TOKEN=$2
log_msg $LOG_DEBUG "CRED_SERVICE_IP:$CRED_SERVICE_IP, $TOKEN, $AGENT_CONF_FILE"
main







