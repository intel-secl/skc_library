STEPS TO DEPLOY DOCKER CONTAINER FOR WORKLOAD:

NOTE: Latest Quick Start Guide is inside skc-tools repo.

1. Build all the SKC components on VM including SGX Agent and SKC Library following Quick Start Guide.
2. Deploy all the CSP and enterprise components on respective VMs except SGX Agent and SKC Library. Deploy SGX Agent on SGX-Enabled icelake host following Quick Start Guide.
3. Create a directory on /root in the deployment machine and copy skc_library.tar, skc_library.sha2 and untar.sh generated during build(from skc_library directory in skc-tools repo) to a directory in the deployment machine.
4. Setup the proxy as mentioned in the Quick Start Guide.
5. cd <created_directory> on deployment machine. Run ./untar.sh inside the created directory.
6. Copy configure_skc.sh and entrypoint.sh scripts from container folder in skc_library repo to created directory.
7. Copy Dockerfile from container folder in skc_library repo to created directory.
8. Copy content inside the container/resource/ folder in skc_library repo to created directory.
8. Run this command from created directory for building the Dockerfile: docker build --build-arg http_proxy=${http_proxy} --build-arg https_proxy=${https_proxy} --build-arg no_proxy=${no_proxy} -t isecl/sgx:latest .
9. Copy skc_library_create_roles.sh and skc_roles.conf from container folder in skc_library repo to /root/ folder on enterprise VM. Provide enterprise side CMS/AAS IP in skc_roles.conf and run ./skc_library_create_roles.sh. Copy the generated token to SKC_TOKEN env variable in skc_library.conf file inside created directory.
10. Create a key on KBS following Quick Start guide and copy the certificate to the directory created on deployment machine.
11. Update keys.txt and nginx.conf inside created directory with the key Id and certificate path as mentioned in Quick Start Guide. Update pkcs11-apimodule.ini with preload file path(/root/keys.txt) as mentioned in Quick Start Guide.
12. Update sgx_default_qcnl.conf and skc_library.conf inside created directory with CSP_SCS IP and port. Update other env variables in skc_library.conf with enterprise IP and port.
13. Update hosts file inside created directory with KBS IP and hostname.
14. Setup master/worker node and join worker node with the same name as of SGX Agent Hostname.
14. Copy deployment.yaml file from container folder in skc_library repo to master node and update certificate id in mountPath and hostPath.
15. Run kubectl apply -f deployment.yaml. This will create deployment and service on master node and launch conatiner on SGX host machine.
16. Run this command on SGX host to check if container is up and running: docker ps -a
17. Run this command from deployment machine for validation, this will use key stored inside enclave for SSL Handshake and download index.html from nginx: wget -k -v https://<svc CLUSTER-IP>:<svc port> --no-check-certificate. Retrieve svc IP and port using command: kubectl get svc.
